library verilog;
use verilog.vl_types.all;
entity ddr2_phy_alt_mem_phy_clk_reset is
    generic(
        AC_PHASE        : string  := "MEM_CLK";
        CLOCK_INDEX_WIDTH: integer := 3;
        CAPTURE_MIMIC_PATH: vl_logic_vector(0 downto 0) := (others => Hi0);
        DDR_MIMIC_PATH_EN: vl_logic_vector(0 downto 0) := (others => Hi1);
        DEDICATED_MEMORY_CLK_EN: vl_logic_vector(0 downto 0) := (others => Hi0);
        DLL_EXPORT_IMPORT: string  := "NONE";
        DWIDTH_RATIO    : integer := 4;
        LOCAL_IF_CLK_PS : integer := 4000;
        MEM_IF_CLK_PAIR_COUNT: integer := 3;
        MEM_IF_CLK_PS   : integer := 4000;
        MEM_IF_CS_WIDTH : integer := 2;
        MEM_IF_DQ_PER_DQS: integer := 8;
        MEM_IF_DQS_WIDTH: integer := 8;
        MEM_IF_DWIDTH   : integer := 64;
        MIF_FILENAME    : string  := "PLL.MIF";
        PLL_EXPORT_IMPORT: string  := "NONE";
        PLL_REF_CLK_PS  : integer := 4000;
        PLL_TYPE        : string  := "ENHANCED";
        SPEED_GRADE     : string  := "C3";
        DLL_DELAY_BUFFER_MODE: string  := "HIGH";
        DLL_DELAY_CHAIN_LENGTH: integer := 10;
        DQS_OUT_MODE    : string  := "DELAY_CHAIN2";
        DQS_PHASE       : integer := 72;
        SCAN_CLK_DIVIDE_BY: integer := 2;
        USE_MEM_CLK_FOR_ADDR_CMD_CLK: integer := 1
    );
    port(
        pll_ref_clk     : in     vl_logic;
        global_reset_n  : in     vl_logic;
        soft_reset_n    : in     vl_logic;
        seq_rdp_reset_req_n: in     vl_logic;
        ac_clk_2x       : out    vl_logic;
        measure_clk_2x  : out    vl_logic;
        mem_clk_2x      : out    vl_logic;
        mem_clk         : inout  vl_logic_vector;
        mem_clk_n       : inout  vl_logic_vector;
        phy_clk_1x      : out    vl_logic;
        resync_clk_2x   : out    vl_logic;
        cs_n_clk_2x     : out    vl_logic;
        write_clk_2x    : out    vl_logic;
        half_rate_clk   : out    vl_logic;
        reset_ac_clk_2x_n: out    vl_logic;
        reset_measure_clk_2x_n: out    vl_logic;
        reset_mem_clk_2x_n: out    vl_logic;
        reset_phy_clk_1x_n: out    vl_logic;
        reset_resync_clk_2x_n: out    vl_logic;
        reset_write_clk_2x_n: out    vl_logic;
        reset_cs_n_clk_2x_n: out    vl_logic;
        reset_rdp_phy_clk_1x_n: out    vl_logic;
        mem_reset_n     : out    vl_logic;
        reset_request_n : out    vl_logic;
        phs_shft_busy   : out    vl_logic;
        seq_pll_inc_dec_n: in     vl_logic;
        seq_pll_select  : in     vl_logic_vector;
        seq_pll_start_reconfig: in     vl_logic;
        mimic_data_2x   : out    vl_logic;
        seq_clk_disable : in     vl_logic;
        ctrl_clk_disable: in     vl_logic_vector
    );
    attribute mti_svvh_generic_type : integer;
    attribute mti_svvh_generic_type of AC_PHASE : constant is 1;
    attribute mti_svvh_generic_type of CLOCK_INDEX_WIDTH : constant is 1;
    attribute mti_svvh_generic_type of CAPTURE_MIMIC_PATH : constant is 2;
    attribute mti_svvh_generic_type of DDR_MIMIC_PATH_EN : constant is 2;
    attribute mti_svvh_generic_type of DEDICATED_MEMORY_CLK_EN : constant is 2;
    attribute mti_svvh_generic_type of DLL_EXPORT_IMPORT : constant is 1;
    attribute mti_svvh_generic_type of DWIDTH_RATIO : constant is 1;
    attribute mti_svvh_generic_type of LOCAL_IF_CLK_PS : constant is 1;
    attribute mti_svvh_generic_type of MEM_IF_CLK_PAIR_COUNT : constant is 1;
    attribute mti_svvh_generic_type of MEM_IF_CLK_PS : constant is 1;
    attribute mti_svvh_generic_type of MEM_IF_CS_WIDTH : constant is 1;
    attribute mti_svvh_generic_type of MEM_IF_DQ_PER_DQS : constant is 1;
    attribute mti_svvh_generic_type of MEM_IF_DQS_WIDTH : constant is 1;
    attribute mti_svvh_generic_type of MEM_IF_DWIDTH : constant is 1;
    attribute mti_svvh_generic_type of MIF_FILENAME : constant is 1;
    attribute mti_svvh_generic_type of PLL_EXPORT_IMPORT : constant is 1;
    attribute mti_svvh_generic_type of PLL_REF_CLK_PS : constant is 1;
    attribute mti_svvh_generic_type of PLL_TYPE : constant is 1;
    attribute mti_svvh_generic_type of SPEED_GRADE : constant is 1;
    attribute mti_svvh_generic_type of DLL_DELAY_BUFFER_MODE : constant is 1;
    attribute mti_svvh_generic_type of DLL_DELAY_CHAIN_LENGTH : constant is 1;
    attribute mti_svvh_generic_type of DQS_OUT_MODE : constant is 1;
    attribute mti_svvh_generic_type of DQS_PHASE : constant is 1;
    attribute mti_svvh_generic_type of SCAN_CLK_DIVIDE_BY : constant is 1;
    attribute mti_svvh_generic_type of USE_MEM_CLK_FOR_ADDR_CMD_CLK : constant is 1;
end ddr2_phy_alt_mem_phy_clk_reset;
